{"version":3,"sources":["View/styles.tsx","View/WorkScreen/components/WorkonBoarding.tsx","Model/redux/actions.tsx","View/WorkScreen/components/WorkForm.tsx","View/WorkScreen/components/WorkTimer.tsx","View/WorkScreen/components/WorkCongrats.tsx","View/WorkScreen/WorkScreen.tsx","Model/redux/reducers/sprintReducer.tsx","Model/redux/reducers/relaxReducer.tsx","Model/redux/reducers/index.tsx","Model/redux/storage.tsx","App.tsx","web-build/register-service-worker.js"],"names":["colorScheme","Appearance","getColorScheme","gtd_stylesheet","StyleSheet","create","container","height","justifyContent","alignItems","textCenter","textAlign","textAlignVertical","color","DarkTheme","colors","text","DefaultTheme","formContainer","flexDirection","upperPart","WorkonBoarding","View","style","h2","h1","type","title","onPress","props","navigation","navigate","work_components","form","Component","sprintUpdate","value","payload","validationSchema","yup","shape","hours","required","moreThan","integer","lessThan","minutes","WorkForm","console","log","this","initialValues","validateOnChange","onSubmit","val","credit","timer","initialErrors","handleChange","handleBlur","handleSubmit","values","errors","isValid","touched","KeyboardAvoidingView","behavior","width","keyboardType","placeholder","inputStyle","onChangeText","onBlur","disabled","mapReducerToProps","connect","state","sprintCred","sprint","WorkTimer","now","Date","start","diff","id","setInterval","n","getTime","sprintCredit","clearInterval","interval","relaxUpdate","end","setState","BackHandler","addEventListener","toUTCString","propTypes","prop","PropTypes","mapDispatchToProps","WorkCongrats","earnings","relax","earnings_string","getUTCHours","getUTCMinutes","getUTCSeconds","stack","createStackNavigator","onBoarding","WorkScreen","Navigator","screenOptions","headerLeft","gestureEnabled","Screen","name","component","options","headerShown","action","combineReducers","store","createStore","rootReducer","bottomTabNavigator","createBottomTabNavigator","App","scheme","useColorScheme","NavigationContainer","theme","navigator","window","serviceWorker","register","scope","then","info","catch","error"],"mappings":"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","file":"static/js/app.da3c361d.chunk.js","sourcesContent":["import { StyleSheet } from \"react-native\"\nimport { Appearance } from \"react-native-appearance\";\nimport { DarkTheme, DefaultTheme } from \"@react-navigation/native\";\n\nconst colorScheme = Appearance.getColorScheme();\n\nexport const gtd_stylesheet = StyleSheet.create({\n    container:{\n        height:'100%',\n        justifyContent:'space-around',\n        alignItems:'center',\n    },\n    textCenter:{\n        textAlign:'center',\n        textAlignVertical:'center',\n        color: colorScheme === 'dark' ? DarkTheme.colors.text : DefaultTheme.colors.text \n    },\n\n    formContainer:{\n        flexDirection:'row',\n        alignItems:'center',\n        justifyContent:'center'\n    },\n    upperPart:{\n        justifyContent:'center',\n        alignItems:'center'\n    }\n});\n\n","import React, { Component } from 'react'\nimport { View } from 'react-native'\nimport {Text, Button} from 'react-native-elements'\nimport { work_components } from '../WorkScreen'\nimport { gtd_stylesheet } from '../../styles'\nexport default class WorkonBoarding extends Component {\n    render() {\n        return (\n            <View style={gtd_stylesheet.container}>\n                <View>\n                <Text h2 style={gtd_stylesheet.textCenter}>Let's begin</Text>\n                <Text h1 style={gtd_stylesheet.textCenter}>SPRINT</Text>\n                </View>\n                <Button type='solid' title='Start!' onPress={() => this.props.navigation.navigate(work_components.form)}/>\n            </View>\n        )\n    }\n}\n\n\n","export const UPDATE_SPRINT = 'UPDATE_SPRINT';\n\nexport const sprintUpdate = value => ({\n    type:UPDATE_SPRINT,\n    payload: value\n});\n\nexport const UPDATE_RELAX = 'UPDATE_RELAX';\n\n\nexport const relaxUpdate = value => ({\n    type:UPDATE_RELAX,\n    payload: value,\n});","import React, { Component } from \"react\";\nimport { View, KeyboardAvoidingView } from \"react-native\";\nimport { Text, Input, Button } from \"react-native-elements\";\nimport { gtd_stylesheet } from \"../../styles\";\n\nimport {connect} from 'react-redux';\nimport { sprintUpdate } from \"../../../Model/redux/actions\";\nimport { Formik } from \"formik\";\n\nimport * as yup from \"yup\";\nimport { work_components } from \"../WorkScreen\";\n\nconst validationSchema = yup.object().shape({\n  hours: yup.number().required().moreThan(-1).integer().lessThan(12),\n  minutes: yup.number().required().moreThan(-1).integer().lessThan(60),\n});\n\nconst convertToDate = (hours, minutes) => {\n  let value = hours * 60 * 60 * 1000 + minutes * 60 *1000;\n\n  return value;\n}\n\n\nexport class WorkForm extends Component {\n\n  render() {\n    console.log(this.props);\n\n    return (\n      <Formik\n        initialValues={{ hours: \"\", minutes: \"\" }}\n        validateOnChange={true}\n        onSubmit={(val) => {\n          this.props.sprintUpdate({credit: convertToDate(val.hours, val.minutes)});        \n          this.props.navigation.navigate(work_components.timer)  \n        }}\n        validationSchema={validationSchema}\n        initialErrors={{ hours: \"\", minutes: \"\" }}\n        \n      >\n        {({\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          values,\n          errors,\n          isValid,\n          touched,\n        }) => (\n          <KeyboardAvoidingView style={gtd_stylesheet.container} behavior='padding'>\n            <View style={gtd_stylesheet.upperPart}>\n              <Text h2 style={gtd_stylesheet.textCenter}>For how long are you going to sprint?</Text>\n\n              <View style={[gtd_stylesheet.formContainer]}>\n                <View style={{width:'50%'}}>\n                  <Input\n                    keyboardType=\"numeric\"\n                    placeholder=\"hh\"\n                    inputStyle={[gtd_stylesheet.textCenter, {textAlign:'right'}]}\n                    onChangeText={handleChange(\"hours\")}\n                    onBlur={handleBlur(\"hours\")}\n                    value={values.hours}\n                  />\n                  {touched.hours && errors.hours && <Text style={{textAlign:'right'}}>{errors.hours}</Text>}\n                </View>\n                <Text style={gtd_stylesheet.textCenter}>:</Text>\n                <View style={{width:'50%'}}>\n                  <Input\n                    keyboardType=\"numeric\"\n                    placeholder=\"mm\"\n                    onChangeText={handleChange(\"minutes\")}\n                    onBlur={handleBlur(\"minutes\")}\n                    value={values.minutes}\n                    inputStyle={[gtd_stylesheet.textCenter,{textAlign:'left'}]}\n                  />\n                  {touched.minutes && errors.minutes && (\n                    <Text>{errors.minutes}</Text>\n                  )}\n                </View>\n              </View>\n            </View>\n            <Button\n              type=\"solid\"\n              title=\"Start!\"\n              onPress={handleSubmit}\n              disabled={!isValid}\n            />\n          </KeyboardAvoidingView>\n        )}\n      </Formik>\n    );\n  }\n}\nconst mapStateToProps = state => ({\n  sprintCred: state.sprint\n})\n\n\nconst mapReducerToProps = {\n  sprintUpdate: sprintUpdate,\n}\n\nexport default connect(mapStateToProps, mapReducerToProps)(WorkForm)","import React, { Component } from 'react'\nimport { View, BackHandler } from 'react-native'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\n\nimport { sprintUpdate } from \"../../../Model/redux/actions\";\nimport { relaxUpdate } from \"../../../Model/redux/actions\";\nimport { gtd_stylesheet } from '../../styles';\nimport { Text } from 'react-native-elements';\nimport { work_components } from '../WorkScreen';\n\nexport class WorkTimer extends Component {\n    static propTypes = {\n        prop: PropTypes\n    }\n\n    constructor(props) {\n        super(props);\n        const now = new Date();\n        this.state = {start: now, diff:0}\n        \n        \n    }\n\n    componentDidMount(){\n        let id = setInterval(() => {\n            let n = new Date();\n            let diff =  {};\n            diff = this.state.start.getTime() + this.props.sprintCredit.credit - n.getTime()\n\n            if(diff <= 0) {\n                clearInterval(this.state.interval);\n                diff = 'tt';\n                this.props.relaxUpdate({credit: this.props.sprintCredit.credit / 3})\n                this.props.sprintUpdate({credit: this.props.sprintCredit.credit * -1});\n                this.props.navigation.navigate(work_components.end);\n                /* navigate to end & congrats */\n            }\n            this.setState({diff: diff});\n\n        }, 250);\n\n        this.setState({interval: id});\n\n        BackHandler.addEventListener('hardwareBackPress', function() {\n            /**\n             * this.onMainScreen and this.goBack are just examples,\n             * you need to use your own implementation here.\n             *\n             * Typically you would use the navigator here to go to the last state.\n             */\n            /**\n             * Returning false will let the event to bubble up & let other event listeners\n             * or the system's default back action to be executed.\n             */\n            return true;\n          });\n    }\n\n    render() {\n        let diff = this.state.diff;\n        if (this.state.diff !== 'tt') diff = new Date(this.state.diff).toUTCString();\n\n        \n        return (\n            <View style={gtd_stylesheet.container}>\n                <Text h1 style={gtd_stylesheet.textCenter}> {diff}  </Text>\n            </View>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    sprintCredit: state.sprint\n})\n\nconst mapDispatchToProps = {\n    sprintUpdate,\n    relaxUpdate,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WorkTimer)\n","import React, { Component } from 'react'\nimport { View } from 'react-native'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { gtd_stylesheet } from '../../styles'\nimport { Text, Button } from 'react-native-elements'\nimport { work_components } from '../WorkScreen'\n\nexport class WorkCongrats extends Component {\n    render() {\n\n        let earnings = new Date(this.props.relax.credit)\n\n        let earnings_string = '' + earnings.getUTCHours();\n\n        earnings_string += ':' + ((earnings.getUTCMinutes() < 10) ? ('0' + earnings.getUTCMinutes()) : earnings.getUTCMinutes());\n        earnings_string += ':' + ((earnings.getUTCSeconds() < 10) ? ('0' + earnings.getUTCSeconds()) : earnings.getUTCSeconds());\n\n\n        return (\n            <View style={gtd_stylesheet.container}>\n                <Text>You earned</Text>\n                <Text h1 style={gtd_stylesheet.textCenter}> {earnings_string} </Text>\n                <Text>so far!</Text>\n                <Button title='Start again!' onPress={() => {this.props.navigation.navigate(work_components.form)}}/>\n            </View>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    relax: state.relax\n})\n\nconst mapDispatchToProps = {\n    \n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WorkCongrats)\n","import React, { Component } from 'react'\nimport { Text, View } from 'react-native'\n\nimport {createStackNavigator} from '@react-navigation/stack';\nimport WorkonBoarding from './components/WorkonBoarding';\nimport WorkForm from './components/WorkForm';\nimport WorkTimer  from './components/WorkTimer';\nimport WorkCongrats from './components/WorkCongrats';\n\nconst stack = createStackNavigator();\n\nexport const work_components = {\n    onBoarding: 'New Sprint!',\n    form:\"Sprint for...\",\n    timer:'Sprinting..',\n    end:'Sprint finished!'\n}\n\n\nexport default class WorkScreen extends Component {\n    render() {\n        return (\n            <stack.Navigator screenOptions={{headerLeft:null, gestureEnabled:false}}>\n                <stack.Screen name={work_components.onBoarding} component={WorkonBoarding} />\n                <stack.Screen name={work_components.form} component={WorkForm} />\n                <stack.Screen name={work_components.timer} component={WorkTimer} options={{headerShown:false}}/>\n                <stack.Screen name={work_components.end} component={WorkCongrats} />\n\n            </stack.Navigator>\n        )\n    }\n}\n","import { UPDATE_SPRINT } from \"../actions\";\n\n\nconst sprint = (state = { credit: 0 }, action) => {\n  switch (action.type) {\n    case UPDATE_SPRINT:      \n      return {...state, credit:(state.credit + action.payload.credit)};\n\n    default:\n      return state;\n  }\n}\n\nexport default sprint\n","import { UPDATE_RELAX } from \"../actions\";\n\n\nconst relax = (state = { credit: 0 }, action) => {\n  switch (action.type) {\n    case UPDATE_RELAX:      \n      return {...state, credit:(state.credit + action.payload.credit)};\n\n    default:\n      return state;\n  }\n}\n\nexport default relax\n","\nimport {combineReducers} from 'redux';\nimport sprint from './sprintReducer'\nimport relax from './relaxReducer';\n\nexport default combineReducers({\n    sprint: sprint,\n    relax:relax\n});","\nimport rootReducer from './reducers/index';\nimport {createStore} from 'redux';\n\n\nexport const store = createStore(rootReducer);","import { StatusBar } from \"expo-status-bar\";\nimport React from \"react\";\nimport { StyleSheet, Text, View } from \"react-native\";\nimport { AppearanceProvider, useColorScheme } from \"react-native-appearance\";\nimport {Provider} from 'react-redux';\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport {\n  NavigationContainer,\n  DefaultTheme,\n  DarkTheme,\n} from \"@react-navigation/native\";\nimport WorkScreen from \"./View/WorkScreen/WorkScreen\";\nimport { store } from \"./Model/redux/storage\";\n\n\nconst bottomTabNavigator = createBottomTabNavigator();\n\n\n\nexport default function App() {\n  const scheme = useColorScheme();\n\n\n  return (\n    <Provider store={store}>\n      <AppearanceProvider>\n      <NavigationContainer\n        theme={scheme === \"dark\" ? DarkTheme : DefaultTheme}\n      >\n        <bottomTabNavigator.Navigator>\n          <bottomTabNavigator.Screen name='Work' component={WorkScreen}/>\n        </bottomTabNavigator.Navigator> \n\n      </NavigationContainer>\n    </AppearanceProvider>\n    </Provider>\n  );\n}\n\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/gtd-timer/expo-service-worker.js', { scope: '/gtd-timer/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n"],"sourceRoot":""}